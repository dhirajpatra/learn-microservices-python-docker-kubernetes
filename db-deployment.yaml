apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.32.0 (HEAD)
      labels:
        io.kompose.network/myproject-network: "true"
        io.kompose.service: db
    spec:
      containers:
        - env:
            - name: CELERY_BROKER_URL
              valueFrom:
                configMapKeyRef:
                  key: CELERY_BROKER_URL
                  name: env
            - name: DB_URI
              valueFrom:
                configMapKeyRef:
                  key: DB_URI
                  name: env
            - name: DB_URI_ALEMBIC
              valueFrom:
                configMapKeyRef:
                  key: DB_URI_ALEMBIC
                  name: env
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: env
          image: postgres:14
          name: db
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: db-data
            - mountPath: /docker-entrypoint-initdb.d/init-db.sql
              name: db-claim1
            - mountPath: /app/.env
              name: db-claim2
      restartPolicy: Always
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-data
        - name: db-claim1
          persistentVolumeClaim:
            claimName: db-claim1
        - name: db-claim2
          persistentVolumeClaim:
            claimName: db-claim2
